{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/employee/add/add.component.ts","./src/app/employee/add/add.component.html","./src/app/employee/dashboard/dashboard.component.ts","./src/app/employee/dashboard/dashboard.component.html","./src/app/employee/employee-list/employee-list.component.ts","./src/app/employee/employee-list/employee-list.component.html","./src/app/modules/employee/employee.module.ts","./src/app/service/employee.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACkC;AAC7B;AACkB;;;AAE9E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0FAAkB,EAAC;IAC1C,EAAE,IAAI,EAAG,cAAc,EAAE,SAAS,EAAE,qGAAqB,EAAC;IAC1D,EAAE,IAAI,EAAG,aAAa,EAAE,SAAS,EAAE,wEAAY,EAAC;CACjD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,2EAA+B;;6FDMlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACM;AAES;AACT;AAC0C;AAC7B;AACkB;AACtB;AAGA;;AAmBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;YAChB,sEAAc;SACf;mIAIU,SAAS,mBAflB,2DAAY;QACZ,qGAAqB;QACrB,wEAAY;QACZ,0FAAkB,aAGlB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;QAChB,sEAAc;6FAKL,SAAS;cAjBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qGAAqB;oBACrB,wEAAY;oBACZ,0FAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,qEAAgB;oBAChB,sEAAc;iBACf;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;AAAA;AAAA;AAAkD;AACsB;;;AAOjE,MAAM,YAAY;IAEvB;QACA,UAAK,GAAG,IAAI,gFAAc,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;IADnC,CAAC;IAGjB,QAAQ;IACR,CAAC;IACD,QAAQ;QACN,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC7B,CAAC;;wEATU,YAAY;4FAAZ,YAAY;QCRzB,yEACM;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,6EACE;QADI,wIAAY,cAAU,IAAC;QAC3B,yEACE;QAAA,2EAAuB;QAAA,qEAAU;QAAA,4DAAQ;QACzC,8EAIA;QAFO,yLAA6B;QAFpC,4DAIA;QAIF,4DAAM;QACN,0EACI;QAAA,4EAAsB;QAAA,qEAAS;QAAA,4DAAQ;QACvC,+EAIF;QAFS,yLAA4B;QAFnC,4DAIF;QAAA,4DAAM;QACR,0EACE;QAAA,6EAAoB;QAAA,kEAAM;QAAA,4DAAQ;QAClC,kFAIE;QAFM,wLAA0B;QAEhC,8EAAkB;QAAA,gEAAI;QAAA,4DAAS;QAC/B,8EAAkB;QAAA,kEAAM;QAAA,4DAAS;QACnC,4DAAS;QACX,4DAAM;QAEN,0EACI;QAAA,6EAAiB;QAAA,+DAAG;QAAA,4DAAQ;QAC5B,iFAIF;QAFS,oLAAuB;QAF9B,4DAIF;QAAA,4DAAM;QACN,0EACI;QAAA,6EAAiB;QAAA,uEAAW;QAAA,4DAAQ;QACpC,iFAIF;QAFS,2LAA8B;QAFrC,4DAIF;QAAA,4DAAM;QACV,8EAAoF;QAAA,kEAAM;QAAA,4DAAS;QAErG,4DAAO;QACT,4DAAM;;;QA1CO,0DAA6B;QAA7B,wFAA6B;QAW3B,0DAA4B;QAA5B,uFAA4B;QAO7B,0DAA0B;QAA1B,qFAA0B;QAWzB,0DAAuB;QAAvB,kFAAuB;QAOrB,0DAA8B;QAA9B,yFAA8B;QAGG,0DAAqC;QAArC,qFAAqC;;6FDtC9E,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;QACvB,sEACI;QAAA,qEACE;QAAA,qEAAI;QAAA,uEAA6B;QAAA,wEAAa;QAAA,4DAAI;QAAA,4DAAK;QACvD,qEAAI;QAAA,uEAA4B;QAAA,uEAAY;QAAA,4DAAI;QAAA,4DAAK;QACvD,4DAAK;QACP,4DAAM;;6FDCK,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAIJ;AACE;;;;;ICqBrD,wEAAuC;IAAA,gEAAI;IAAA,4DAAK;;;IAChD,wEAAwC;IAAA,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,gGAAsB;;;IAK9D,wEAAuC;IAAA,iEAAK;IAAA,4DAAK;;;IACjD,wEAAwC;IAAA,uDAAqB;IAAA,4DAAK;;;IAA1B,0DAAqB;IAArB,+FAAqB;;;IAI/D,mEAA4D;;;IAC5D,oEAAkE;;ADzB/D,MAAM,qBAAqB;IAOhC,YAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QALtD,qBAAgB,GAAa,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAQlD,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;aACjC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,MAAM;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAW,MAAM,CAAC,CAAC;QAC/D,CAAC,CAAC;IAEH,CAAC;IAEF,QAAQ;IACR,CAAC;;0FApBU,qBAAqB;qGAArB,qBAAqB;wEAKvB,wEAAY;;;;;QCCvB,2EAEI;QAIA,2EACE;QAAA,+GAAuC;QACvC,+GAAwC;QAC1C,qEAAe;QAGf,2EACE;QAAA,+GAAuC;QACvC,+GAAwC;QAC1C,qEAAe;QAGf,+GAAuD;QACvD,+GAA6D;QAC/D,4DAAQ;;QApBO,sFAAyB;QAkBnB,0DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FDzBnD,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAMA,uDAAS;mBAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AElBvC;AAAA;AAAA;AAAO,MAAM,cAAc;IAC3B,YACS,SAAkB,EAClB,QAAgB,EAChB,MAAc,EACd,GAAW,EACX,UAAgB;QAJhB,cAAS,GAAT,SAAS,CAAS;QAClB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAQ;QACX,eAAU,GAAV,UAAU,CAAM;IACf,CAAC;CACV;AAEM,MAAM,QAAQ;CAMlB;;;;;;;;;;;;;AChBH;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,eAAe;IAE1B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,sCAAsC,CAAC;IAC1E,CAAC;;8EANU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee/employee-list/employee-list.component';\nimport { AddComponent } from './employee/add/add.component';\nimport { DashboardComponent } from './employee/dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path :'', component: DashboardComponent},\n  { path : 'employeelist', component: EmployeeListComponent},\n  { path : 'addemployee', component: AddComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TricorWeb';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeListComponent } from './employee/employee-list/employee-list.component';\nimport { AddComponent } from './employee/add/add.component';\nimport { DashboardComponent } from './employee/dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table'  \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeListComponent,\n    AddComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,    \n    FormsModule,\n    HttpClientModule,\n    MatTableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeModule } from '../../modules/employee/employee.module';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor() { }\n  model = new EmployeeModule('','','',0, new Date());\n\n  ngOnInit(): void {\n  }\n  onSubmit(){\n    alert(this.model.firstname)\n  }\n}\n","<div class=\"container\">\n      <h1>Add Employee</h1>\n      <form (ngSubmit)=\"onSubmit()\" #employeeForm=\"ngForm\">\n        <div class=\"form-group\">\n          <label for=\"firstname\">First Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"firstname\"\n                 required\n                 [(ngModel)]=\"model.firstname\" name=\"firstname\"\n                 #firstname=\"ngModel\">\n          <!-- <div [hidden]=\"firstname.valid || firstname.pristine\"\n               class=\"alert alert-danger\">\n            First Name is required\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lastname\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"lastname\"\n                   required\n                   [(ngModel)]=\"model.lastname\" name=\"lastname\"\n                   #lastname=\"ngModel\">           \n          </div>\n        <div class=\"form-group\">\n          <label for=\"gender\">Gender</label>\n          <select class=\"form-control\" id=\"gender\"\n                  required\n                  [(ngModel)]=\"model.gender\" name=\"gender\"\n                  #gender=\"ngModel\">\n            <option value=\"M\">Male</option>\n            <option value=\"F\">Female</option>\n          </select>\n        </div>\n  \n        <div class=\"form-group\">\n            <label for=\"age\">Age</label>\n            <input type=\"number\" class=\"form-control\" id=\"age\"\n                   required\n                   [(ngModel)]=\"model.age\" name=\"age\"\n                   #age=\"ngModel\">           \n          </div>\n          <div class=\"form-group\">\n              <label for=\"age\">Joined Date</label>\n              <input type=\"date\" class=\"form-control\" id=\"joineddate\"\n                     required\n                     [(ngModel)]=\"model.joineddate\" name=\"joineddate\"\n                     #age=\"ngModel\">           \n            </div>\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!employeeForm.form.valid\">Submit</button>\n        <!-- <button type=\"button\" class=\"btn btn-default\" (click)=\"newemployee(); employeeForm.reset()\">Reset</button> -->\n      </form>\n    </div>\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n<nav>\n    <ul>\n      <li><a routerLink=\"employeelist\">Employee List</a></li>\n      <li><a routerLink=\"addemployee\">Add Employee</a></li>\n    </ul>\n  </nav>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { EmployeeService } from '../../service/employee.service';\nimport { Employee } from '../../modules/employee/employee.module';\n\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\nemployee : Employee[];\ndisplayedColumns: string[] = ['firstname', 'lastname'];\ndataSource: MatTableDataSource<Employee>;\n\n@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private employeeservice: EmployeeService) {\n    \n\n     this.employeeservice.getEmployees()\n      .subscribe(result => {\n        console.log(result);\n        this.employee = result\n        this.dataSource = new MatTableDataSource<Employee>(result);\n    })\n\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>employee-list works!</p>\n<table>\n    <thead>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Gender</th>\n        <th>Age</th>\n        <th>Joined Date</th>\n        <th>Action</th>\n    </thead>\n    <tr *ngFor=\"let item of employee\">\n        <td>{{item.firstname}}</td>\n        <td>{{item.lastname}}</td>\n        <td>{{item.gender}}</td>\n        <td>{{item.age}}</td>\n        <td>{{item.joineddate}}</td>\n        <td>View | Edit | Delete</td>\n    </tr>\n</table> -->\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"firstname\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.firstname}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"lastname\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.lastname}} </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n","export class EmployeeModule { \nconstructor(\n  public firstname : string,\n  public lastname: string,\n  public gender: string,\n  public age: number,\n  public joineddate: Date\n  )  {    }\n}\n\nexport class Employee { \n    firstname : string;\n    lastname: string;\n    gender: string;\n    age: number;\n    joineddate: Date;\n  }","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Employee } from '../modules/employee/employee.module';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>('https://localhost:44317/api/employee')\n  }\n  // deleteHero (id: number): Observable<{}> {\n  //   const url = `${this.heroesUrl}/${id}`; // DELETE api/heroes/42\n  //   return this.http.delete(url, httpOptions)\n  //     .pipe(\n  //       catchError(this.handleError('deleteHero'))\n  //     );\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}